on:
  push:
    tags:
      - "*" # example: alpine-3.19-php8.2-grpc-1.60.0
  workflow_dispatch:
    inputs:
      tag:
        description: "Publish as tag push"
        required: true

jobs:
  build:
    name: "Build image"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Log in to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Get vars
      id: v
      run: |
        input='${{ github.event.inputs.tag || github.ref_name }}'

        IFS='-' read -ra columns <<< "$input"
        php_version="${columns[0]}"
        os="${columns[1]}"
        os_version="${columns[2]}"
        ext="${columns[3]}"
        ext_version="${columns[4]}"

        target_tag=$php_version-
        target_tag+=$os-
        target_tag+=$os_version-
        target_tag+=$ext-
        target_tag+=$ext_version

        case "$os" in
          alpine)
            folder="extensions/$ext/php"
            base_tag="$php_version-cli-$os$os_version"
            ;;
          debian)
            folder="extensions/$ext/php"
            base_tag="$php_version-cli-$os_version"
            ;;
          ubuntu)
            folder="extensions/$ext/ubuntu"
            base_tag="$os_version"
            ;;
          *) echo "Invalid os: '$os'"; exit 1;;
        esac

        for var in os os_version php_version ext ext_version base_tag folder target_tag; do
          if [ -z "${!var}" ]; then
            echo "Invalid tag format: '$input' missing '$var'"
            exit 1
          fi
          echo "$var=${!var}" | tee -a $GITHUB_OUTPUT
        done
    - name: Load cache
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ steps.v.outputs.target_tag }}
        restore-keys: ${{ steps.v.outputs.php_version }}-${{steps.v.outputs.os}}-${{steps.v.outputs.os_version}}-

    - name: Build
      uses: docker/build-push-action@v3
      with:
        context: ${{ steps.v.outputs.folder }}/.
        build-args: |
          BASE_TAG=${{ steps.v.outputs.base_tag }}
          PHP_VERSION=${{ steps.v.outputs.php_version }}
          VERSION=${{steps.v.outputs.ext_version}}
        tags: ${{ vars.DOCKER_HUB_REPO }}:${{ steps.v.outputs.target_tag }}
        platforms: "linux/amd64"
        push: true
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        cache-from: type=local,src=/tmp/.buildx-cache

    - name: Replace cache  # temp fix for https://github.com/docker/build-push-action/issues/252 & https://github.com/moby/buildkit/issues/1896.
      run: rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache
