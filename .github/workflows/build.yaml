on:
  push:
    tags:
      - "*" # example: alpine-3.19-php8.2-grpc-1.60.0
  workflow_dispatch:
    inputs:
      tag:
        description: "Publish as tag push"
        required: true

permissions:
  packages: write

jobs:
  build:
    name: "Build image"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Get vars
      id: v
      run: |
        input='${{ github.event.inputs.tag || github.ref_name }}'

        IFS='-' read -ra columns <<< "$input"
        php_version="${columns[0]}"
        os="${columns[1]}"
        os_version="${columns[2]}"
        ext="${columns[3]}"
        ext_version="${columns[4]}"

        target_tag=$php_version-
        target_tag+=$os-
        target_tag+=$os_version-
        target_tag+=$ext-
        target_tag+=$ext_version

        for var in os os_version php_version ext ext_version target_tag; do
          if [ -z "${!var}" ]; then
            echo "Invalid tag format: '$input' missing '$var'"
            exit 1
          fi
          echo "$var=${!var}" | tee -a $GITHUB_OUTPUT
        done
    - name: Load cache
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ steps.v.outputs.target_tag }}
        restore-keys: ${{ steps.v.outputs.php_version }}-${{steps.v.outputs.os}}-${{steps.v.outputs.os_version}}-

    - name: Log in to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Log in to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # ${{ vars.DOCKER_HUB_REPO }}
        images: |
          ghcr.io/${{ github.repository }}
        tags: |
          ${{ steps.v.outputs.target_tag }}
        labels: |
          org.opencontainers.image.title="PHP pure ${{ steps.v.outputs.ext }} extension"
          org.opencontainers.image.description="PHP@${{ steps.v.outputs.php_version }} ${{ steps.v.outputs.ext }}@${{ steps.v.outputs.ext_version }} on ${{ steps.v.outputs.os }}@${{ steps.v.outputs.os_version }}"
          org.opencontainers.image.version="${{ steps.v.outputs.ext_version }}"

    - run: |
        cat <<EOF
        ${{ steps.meta.outputs.tags }}
        ${{ steps.meta.outputs.labels }}
        EOF

    - name: Build
      uses: docker/build-push-action@v3
      with:
        file: extensions/${{ steps.v.outputs.ext }}/Dockerfile.${{ steps.v.outputs.os }}
        context: extensions/${{ steps.v.outputs.ext }}/.
        build-args: |
          OS_VERSION=${{ steps.v.outputs.os_version }}
          PHP_VERSION=${{ steps.v.outputs.php_version }}
          VERSION=${{steps.v.outputs.ext_version}}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: "linux/amd64"
        push: true
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        cache-from: type=local,src=/tmp/.buildx-cache

    - name: Replace cache  # temp fix for https://github.com/docker/build-push-action/issues/252 & https://github.com/moby/buildkit/issues/1896.
      run: rm -rf /tmp/.buildx-cache && mv /tmp/.buildx-cache-new /tmp/.buildx-cache
